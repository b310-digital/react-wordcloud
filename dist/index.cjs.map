{"version":3,"file":"index.cjs","sources":["../src/optimized-d3-cloud.js","../src/utils.js","../src/layout.js","../src/index.js","../src/hooks.js"],"sourcesContent":["// @ts-nocheck\n/**\n * Author: Augustinas (https://github.com/WhoAteDaCake)\n * Source: https://github.com/chrisrzhou/react-wordcloud/blob/166d0b0400a87647fe4e7855a26fe581ce38a502/src/cloud.ts\n * TEMPORARY workaround\n *\n * Implements the wordcloud algorithm based on: https://github.com/jasondavies/d3-cloud/tree/v1.2.5\n * Improvements:\n *  Use a setTimeout + batch sizes to calculate clouds in order to avoid blocking main thread for two long (87-101)\n *\n */\n\n// Word cloud layout by Jason Davies, https://www.jasondavies.com/wordcloud/\n// Algorithm due to Jonathan Feinberg, http://static.mrfeinberg.com/bv_ch03.pdf\n\nimport { dispatch } from 'd3-dispatch';\n\nconst cloudRadians = Math.PI / 180,\n  cw = (1 << 11) >> 5,\n  ch = 1 << 11;\n\nexport default function Cloud() {\n  let size = [256, 256],\n    text = cloudText,\n    font = cloudFont,\n    fontSize = cloudFontSize,\n    fontStyle = cloudFontNormal,\n    fontWeight = cloudFontNormal,\n    rotate = cloudRotate,\n    padding = cloudPadding,\n    spiral = archimedeanSpiral,\n    words = [],\n    timeInterval = Infinity,\n    event = dispatch('word', 'end'),\n    timer = null,\n    random = Math.random,\n    cloud = {},\n    canvas = cloudCanvas;\n\n  let killed = false;\n\n  cloud.canvas = function(_) {\n    return arguments.length ? ((canvas = functor(_)), cloud) : canvas;\n  };\n\n  cloud.start = function() {\n    let contextAndRatio = getContext(canvas()),\n      board = zeroArray((size[0] >> 5) * size[1]),\n      bounds = null,\n      n = words.length,\n      i = -1,\n      tags = [],\n      data = words\n        .map(function(d, i) {\n          d.text = text.call(this, d, i);\n          d.font = font.call(this, d, i);\n          d.style = fontStyle.call(this, d, i);\n          d.weight = fontWeight.call(this, d, i);\n          d.rotate = rotate.call(this, d, i);\n          d.size = ~~fontSize.call(this, d, i);\n          d.padding = padding.call(this, d, i);\n          return d;\n        })\n        .sort(function(a, b) {\n          return b.size - a.size;\n        });\n\n    // Added by react-wordcloud\n    // Allows to calculate a subset of data instead of all of the words at once\n    function multiStep(from, to) {\n      for (let i = from; i < to; i += 1) {\n        const d = data[i];\n        d.x = (size[0] * (random() + 0.5)) >> 1;\n        d.y = (size[1] * (random() + 0.5)) >> 1;\n        cloudSprite(contextAndRatio, d, data, i);\n        if (d.hasText && place(board, d, bounds)) {\n          tags.push(d);\n          event.call('word', cloud, d);\n          if (bounds) cloudBounds(bounds, d);\n          else\n            bounds = [\n              { x: d.x + d.x0, y: d.y + d.y0 },\n              { x: d.x + d.x1, y: d.y + d.y1 },\n            ];\n          // Temporary hack\n          d.x -= size[0] >> 1;\n          d.y -= size[1] >> 1;\n        }\n      }\n    }\n\n    // Added by react-wordcloud\n    // Iterates dataset using setTimeout in order to prevent blocking of the main thread\n    function loop(i) {\n      const step = 50;\n      const from = i * step;\n      const to = Math.min((i + 1) * step, words.length);\n      multiStep(from, to);\n      if (killed) {\n        return;\n      }\n      if (to < words.length) {\n        setTimeout(() => loop(i + 1), 0);\n      } else {\n        cloud.stop();\n        event.call('end', cloud, tags, bounds);\n      }\n    }\n    setTimeout(() => loop(0), 0);\n\n    return cloud;\n  };\n\n  cloud.revive = () => {\n    killed = false;\n    return cloud;\n  };\n\n  cloud.stop = function() {\n    if (timer) {\n      clearInterval(timer);\n      timer = null;\n    }\n    killed = true;\n    return cloud;\n  };\n\n  function getContext(canvas) {\n    canvas.width = canvas.height = 1;\n    const ratio = Math.sqrt(\n      canvas.getContext('2d', { willReadFrequently: true }).getImageData(0, 0, 1, 1).data.length >> 2,\n    );\n    canvas.width = (cw << 5) / ratio;\n    canvas.height = ch / ratio;\n\n    const context = canvas.getContext('2d');\n    context.fillStyle = context.strokeStyle = 'red';\n    context.textAlign = 'center';\n\n    return { context: context, ratio: ratio };\n  }\n\n  function place(board, tag, bounds) {\n    let perimeter = [{ x: 0, y: 0 }, { x: size[0], y: size[1] }],\n      startX = tag.x,\n      startY = tag.y,\n      maxDelta = Math.sqrt(size[0] * size[0] + size[1] * size[1]),\n      s = spiral(size),\n      dt = random() < 0.5 ? 1 : -1,\n      t = -dt,\n      dxdy,\n      dx,\n      dy;\n\n    while ((dxdy = s((t += dt)))) {\n      dx = ~~dxdy[0];\n      dy = ~~dxdy[1];\n\n      if (Math.min(Math.abs(dx), Math.abs(dy)) >= maxDelta) break;\n\n      tag.x = startX + dx;\n      tag.y = startY + dy;\n\n      if (\n        tag.x + tag.x0 < 0 ||\n        tag.y + tag.y0 < 0 ||\n        tag.x + tag.x1 > size[0] ||\n        tag.y + tag.y1 > size[1]\n      )\n        continue;\n      // TODO only check for collisions within current bounds.\n      if (!bounds || !cloudCollide(tag, board, size[0])) {\n        if (!bounds || collideRects(tag, bounds)) {\n          var sprite = tag.sprite,\n            w = tag.width >> 5,\n            sw = size[0] >> 5,\n            lx = tag.x - (w << 4),\n            sx = lx & 0x7f,\n            msx = 32 - sx,\n            h = tag.y1 - tag.y0,\n            x = (tag.y + tag.y0) * sw + (lx >> 5),\n            last;\n          for (let j = 0; j < h; j++) {\n            last = 0;\n            for (let i = 0; i <= w; i++) {\n              board[x + i] |=\n                (last << msx) | (i < w ? (last = sprite[j * w + i]) >>> sx : 0);\n            }\n            x += sw;\n          }\n          delete tag.sprite;\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  cloud.timeInterval = function(_) {\n    return arguments.length\n      ? ((timeInterval = _ == null ? Infinity : _), cloud)\n      : timeInterval;\n  };\n\n  cloud.words = function(_) {\n    return arguments.length ? ((words = _), cloud) : words;\n  };\n\n  cloud.size = function(_) {\n    return arguments.length ? ((size = [+_[0], +_[1]]), cloud) : size;\n  };\n\n  cloud.font = function(_) {\n    return arguments.length ? ((font = functor(_)), cloud) : font;\n  };\n\n  cloud.fontStyle = function(_) {\n    return arguments.length ? ((fontStyle = functor(_)), cloud) : fontStyle;\n  };\n\n  cloud.fontWeight = function(_) {\n    return arguments.length ? ((fontWeight = functor(_)), cloud) : fontWeight;\n  };\n\n  cloud.rotate = function(_) {\n    return arguments.length ? ((rotate = functor(_)), cloud) : rotate;\n  };\n\n  cloud.text = function(_) {\n    return arguments.length ? ((text = functor(_)), cloud) : text;\n  };\n\n  cloud.spiral = function(_) {\n    return arguments.length ? ((spiral = spirals[_] || _), cloud) : spiral;\n  };\n\n  cloud.fontSize = function(_) {\n    return arguments.length ? ((fontSize = functor(_)), cloud) : fontSize;\n  };\n\n  cloud.padding = function(_) {\n    return arguments.length ? ((padding = functor(_)), cloud) : padding;\n  };\n\n  cloud.random = function(_) {\n    return arguments.length ? ((random = _), cloud) : random;\n  };\n\n  cloud.on = function() {\n    const value = event.on.apply(event, arguments);\n    return value === event ? cloud : value;\n  };\n\n  return cloud;\n}\n\nfunction cloudText(d) {\n  return d.text;\n}\n\nfunction cloudFont() {\n  return 'serif';\n}\n\nfunction cloudFontNormal() {\n  return 'normal';\n}\n\nfunction cloudFontSize(d) {\n  return Math.sqrt(d.value);\n}\n\nfunction cloudRotate() {\n  return (~~(Math.random() * 6) - 3) * 30;\n}\n\nfunction cloudPadding() {\n  return 1;\n}\n\n// Fetches a monochrome sprite bitmap for the specified text.\n// Load in batches for speed.\nfunction cloudSprite(contextAndRatio, d, data, di) {\n  if (d.sprite) return;\n  const c = contextAndRatio.context,\n    ratio = contextAndRatio.ratio;\n\n  c.clearRect(0, 0, (cw << 5) / ratio, ch / ratio);\n  let x = 0,\n    y = 0,\n    maxh = 0,\n    n = data.length;\n  --di;\n  while (++di < n) {\n    d = data[di];\n    c.save();\n    c.font =\n      d.style +\n      ' ' +\n      d.weight +\n      ' ' +\n      ~~((d.size + 1) / ratio) +\n      'px ' +\n      d.font;\n    var w = c.measureText(d.text + 'm').width * ratio,\n      h = d.size << 1;\n    if (d.rotate) {\n      const sr = Math.sin(d.rotate * cloudRadians),\n        cr = Math.cos(d.rotate * cloudRadians),\n        wcr = w * cr,\n        wsr = w * sr,\n        hcr = h * cr,\n        hsr = h * sr;\n      w =\n        ((Math.max(Math.abs(wcr + hsr), Math.abs(wcr - hsr)) + 0x1f) >> 5) << 5;\n      h = ~~Math.max(Math.abs(wsr + hcr), Math.abs(wsr - hcr));\n    } else {\n      w = ((w + 0x1f) >> 5) << 5;\n    }\n    if (h > maxh) maxh = h;\n    if (x + w >= cw << 5) {\n      x = 0;\n      y += maxh;\n      maxh = 0;\n    }\n    if (y + h >= ch) break;\n    c.translate((x + (w >> 1)) / ratio, (y + (h >> 1)) / ratio);\n    if (d.rotate) c.rotate(d.rotate * cloudRadians);\n    c.fillText(d.text, 0, 0);\n\n    if (d.padding) {\n      c.lineWidth = 2 * d.padding;\n      c.strokeText(d.text, 0, 0);\n    }\n    c.restore();\n    d.width = w;\n    d.height = h;\n    d.xoff = x;\n    d.yoff = y;\n    d.x1 = w >> 1;\n    d.y1 = h >> 1;\n    d.x0 = -d.x1;\n    d.y0 = -d.y1;\n    d.hasText = true;\n    x += w;\n  }\n  const pixels = c.getImageData(0, 0, (cw << 5) / ratio, ch / ratio).data,\n    sprite = [];\n  while (--di >= 0) {\n    d = data[di];\n    if (!d.hasText) continue;\n    var w = d.width,\n      w32 = w >> 5,\n      h = d.y1 - d.y0;\n    // Zero the buffer\n    for (var i = 0; i < h * w32; i++) sprite[i] = 0;\n    x = d.xoff;\n    if (x == null) return;\n    y = d.yoff;\n    let seen = 0,\n      seenRow = -1;\n    for (let j = 0; j < h; j++) {\n      for (var i = 0; i < w; i++) {\n        const k = w32 * j + (i >> 5),\n          m = pixels[((y + j) * (cw << 5) + (x + i)) << 2]\n            ? 1 << (31 - (i % 32))\n            : 0;\n        sprite[k] |= m;\n        seen |= m;\n      }\n      if (seen) seenRow = j;\n      else {\n        d.y0++;\n        h--;\n        j--;\n        y++;\n      }\n    }\n    d.y1 = d.y0 + seenRow;\n    d.sprite = sprite.slice(0, (d.y1 - d.y0) * w32);\n  }\n}\n\n// Use mask-based collision detection.\nfunction cloudCollide(tag, board, sw) {\n  sw >>= 5;\n  let sprite = tag.sprite,\n    w = tag.width >> 5,\n    lx = tag.x - (w << 4),\n    sx = lx & 0x7f,\n    msx = 32 - sx,\n    h = tag.y1 - tag.y0,\n    x = (tag.y + tag.y0) * sw + (lx >> 5),\n    last;\n  for (let j = 0; j < h; j++) {\n    last = 0;\n    for (let i = 0; i <= w; i++) {\n      if (\n        ((last << msx) | (i < w ? (last = sprite[j * w + i]) >>> sx : 0)) &\n        board[x + i]\n      )\n        return true;\n    }\n    x += sw;\n  }\n  return false;\n}\n\nfunction cloudBounds(bounds, d) {\n  const b0 = bounds[0],\n    b1 = bounds[1];\n  if (d.x + d.x0 < b0.x) b0.x = d.x + d.x0;\n  if (d.y + d.y0 < b0.y) b0.y = d.y + d.y0;\n  if (d.x + d.x1 > b1.x) b1.x = d.x + d.x1;\n  if (d.y + d.y1 > b1.y) b1.y = d.y + d.y1;\n}\n\nfunction collideRects(a, b) {\n  return (\n    a.x + a.x1 > b[0].x &&\n    a.x + a.x0 < b[1].x &&\n    a.y + a.y1 > b[0].y &&\n    a.y + a.y0 < b[1].y\n  );\n}\n\nfunction archimedeanSpiral(size) {\n  const e = size[0] / size[1];\n  return function(t) {\n    return [e * (t *= 0.1) * Math.cos(t), t * Math.sin(t)];\n  };\n}\n\nfunction rectangularSpiral(size) {\n  let dy = 4,\n    dx = (dy * size[0]) / size[1],\n    x = 0,\n    y = 0;\n  return function(t) {\n    const sign = t < 0 ? -1 : 1;\n    // See triangular numbers: T_n = n * (n + 1) / 2.\n    switch ((Math.sqrt(1 + 4 * sign * t) - sign) & 3) {\n      case 0:\n        x += dx;\n        break;\n      case 1:\n        y += dy;\n        break;\n      case 2:\n        x -= dx;\n        break;\n      default:\n        y -= dy;\n        break;\n    }\n    return [x, y];\n  };\n}\n\nfunction zeroArray(n) {\n  const a = new Uint32Array(n);\n  return a;\n}\n\nfunction cloudCanvas() {\n  return document.createElement('canvas');\n}\n\nfunction functor(d) {\n  return typeof d === 'function'\n    ? d\n    : function() {\n        return d;\n      };\n}\n\nvar spirals = {\n  archimedean: archimedeanSpiral,\n  rectangular: rectangularSpiral,\n};\n","import { max, min, range } from 'd3-array';\nimport { scaleLinear, scaleLog, scaleOrdinal, scaleSqrt } from 'd3-scale';\nimport { schemeCategory10 } from 'd3-scale-chromatic';\n\nexport function choose(array, random) {\n  return array[Math.floor(random() * array.length)];\n}\n\nexport function getDefaultColors() {\n  return range(20)\n    .map(number => number.toString())\n    .map(scaleOrdinal(schemeCategory10));\n}\n\nexport function getFontScale(words, fontSizes, scale) {\n  const minSize = min(words, word => Number(word.value));\n  const maxSize = max(words, word => Number(word.value));\n  let scaleFunction;\n  switch (scale) {\n    case 'log':\n      scaleFunction = scaleLog;\n      break;\n    case 'sqrt':\n      scaleFunction = scaleSqrt;\n      break;\n    case 'linear':\n    default:\n      scaleFunction = scaleLinear;\n      break;\n  }\n\n  const fontScale = scaleFunction()\n    .domain([minSize, maxSize])\n    .range(fontSizes);\n  return fontScale;\n}\n\nexport function getFontSize(word) {\n  return `${word.size}px`;\n}\n\nexport function getText(word) {\n  return word.text;\n}\n\nexport function getTransform(word) {\n  const translate = `translate(${word.x}, ${word.y})`;\n  const rotate =\n    typeof word.rotate === 'number' ? `rotate(${word.rotate})` : '';\n  return translate + rotate;\n}\n\nexport function rotate(rotations, rotationAngles, random) {\n  if (rotations < 1) {\n    return 0;\n  }\n\n  let angles = [];\n  if (rotations === 1) {\n    angles = [rotationAngles[0]];\n  } else {\n    angles = [...rotationAngles];\n    const increment = (rotationAngles[1] - rotationAngles[0]) / (rotations - 1);\n    let angle = rotationAngles[0] + increment;\n    while (angle < rotationAngles[1]) {\n      angles.push(angle);\n      angle += increment;\n    }\n  }\n\n  return choose(angles, random);\n}\n","import 'd3-transition';\n\nimport { descending } from 'd3-array';\nimport d3Cloud from 'd3-cloud';\nimport clonedeep from 'lodash.clonedeep';\nimport seedrandom from 'seedrandom';\nimport tippy from 'tippy.js';\n\nimport optimizedD3Cloud from './optimized-d3-cloud';\nimport {\n  choose,\n  getFontScale,\n  getFontSize,\n  getText,\n  getTransform,\n  rotate,\n} from './utils';\n\nexport function render({ callbacks, options, random, selection, words }) {\n  const {\n    getWordColor,\n    getWordTooltip,\n    onWordClick,\n    onWordMouseOver,\n    onWordMouseOut,\n  } = callbacks;\n  const {\n    colors,\n    enableTooltip,\n    fontStyle,\n    fontWeight,\n    textAttributes,\n    tooltipOptions,\n  } = options;\n  const { fontFamily, transitionDuration } = options;\n\n  function getFill(word) {\n    return getWordColor ? getWordColor(word) : choose(colors, random);\n  }\n\n  // Load words\n  let tooltipInstance;\n  const vizWords = selection.selectAll('text').data(words);\n  vizWords.join(\n    enter => {\n      let text = enter\n        .append('text')\n        .on('click', (event, word) => {\n          if (onWordClick) {\n            onWordClick(word, event);\n          }\n        })\n        .on('mouseover', (event, word) => {\n          if (\n            enableTooltip &&\n            (!tooltipInstance || tooltipInstance.isDestroyed)\n          ) {\n            tooltipInstance = tippy(event.target, {\n              animation: 'scale',\n              arrow: true,\n              content: () => getWordTooltip(word),\n              onHidden: instance => {\n                instance.destroy();\n                tooltipInstance = null;\n              },\n              ...tooltipOptions,\n            });\n          }\n\n          if (onWordMouseOver) {\n            onWordMouseOver(word, event);\n          }\n        })\n        .on('mouseout', (event, word) => {\n          if (tooltipInstance && !tooltipInstance.state.isVisible) {\n            tooltipInstance.destroy();\n          }\n\n          if (onWordMouseOut) {\n            onWordMouseOut(word, event);\n          }\n        })\n        .attr('cursor', onWordClick ? 'pointer' : 'default')\n        .attr('fill', getFill)\n        .attr('font-family', fontFamily)\n        .attr('font-style', fontStyle)\n        .attr('font-weight', fontWeight)\n        .attr('text-anchor', 'middle')\n        .attr('transform', 'translate(0, 0) rotate(0)');\n\n      if (typeof textAttributes === 'object') {\n        Object.keys(textAttributes).forEach(key => {\n          text = text.attr(key, textAttributes[key]);\n        });\n      }\n\n      text = text.call(enter =>\n        enter\n          .transition()\n          .duration(transitionDuration)\n          .attr('font-size', getFontSize)\n          .attr('transform', getTransform)\n          .text(getText),\n      );\n    },\n    update => {\n      update\n        .transition()\n        .duration(transitionDuration)\n        .attr('fill', getFill)\n        .attr('font-family', fontFamily)\n        .attr('font-size', getFontSize)\n        .attr('transform', getTransform)\n        .text(getText);\n    },\n    exit => {\n      exit\n        .transition()\n        .duration(transitionDuration)\n        .attr('fill-opacity', 0)\n        .remove();\n    },\n  );\n}\n\nexport function layout({\n  callbacks,\n  maxWords,\n  options,\n  selection,\n  size,\n  words,\n}) {\n  const MAX_LAYOUT_ATTEMPTS = 10;\n  const SHRINK_FACTOR = 0.95;\n  const {\n    deterministic,\n    enableOptimizations,\n    fontFamily,\n    fontStyle,\n    fontSizes,\n    fontWeight,\n    padding,\n    randomSeed,\n    rotations,\n    rotationAngles,\n    spiral,\n    scale,\n  } = options;\n\n  const sortedWords = words\n    .concat()\n    .sort((x, y) => descending(x.value, y.value))\n    .slice(0, maxWords);\n\n  const random = seedrandom(\n    deterministic ? randomSeed || 'deterministic' : null,\n  );\n\n  let cloud;\n  if (enableOptimizations) {\n    cloud = optimizedD3Cloud();\n  } else {\n    cloud = d3Cloud();\n  }\n\n  cloud\n    .size(size)\n    // @ts-ignore\n    .padding(padding)\n    .words(clonedeep(sortedWords))\n    .rotate(() => {\n      if (rotations === undefined) {\n        // Default rotation algorithm\n        return (~~(random() * 6) - 3) * 30;\n      }\n\n      return rotate(rotations, rotationAngles, random);\n    })\n    .spiral(spiral)\n    .random(random)\n    .text(getText)\n    .font(fontFamily)\n    .fontStyle(fontStyle)\n    .fontWeight(fontWeight);\n\n  function draw(fontSizes, attempts = 1) {\n    if (enableOptimizations) {\n      cloud.revive();\n    }\n\n    cloud\n      .fontSize(word => {\n        const fontScale = getFontScale(sortedWords, fontSizes, scale);\n        return fontScale(word.value);\n      })\n      .on('end', computedWords => {\n        /** KNOWN ISSUE: https://github.com/jasondavies/d3-cloud/issues/36\n         * Recursively layout and decrease font-sizes by a SHRINK_FACTOR.\n         * Bail out with a warning message after MAX_LAYOUT_ATTEMPTS.\n         */\n        if (\n          sortedWords.length !== computedWords.length &&\n          attempts <= MAX_LAYOUT_ATTEMPTS\n        ) {\n          if (attempts === MAX_LAYOUT_ATTEMPTS) {\n            console.warn(\n              `Unable to layout ${sortedWords.length -\n                computedWords.length} word(s) after ${attempts} attempts.  Consider: (1) Increasing the container/component size. (2) Lowering the max font size. (3) Limiting the rotation angles.`,\n            );\n          }\n\n          const minFontSize = Math.max(fontSizes[0] * SHRINK_FACTOR, 1);\n          const maxFontSize = Math.max(\n            fontSizes[1] * SHRINK_FACTOR,\n            minFontSize,\n          );\n\n          draw([minFontSize, maxFontSize], attempts + 1);\n        } else {\n          render({\n            callbacks,\n            options,\n            random,\n            selection,\n            words: computedWords,\n          });\n        }\n      })\n      .start();\n  }\n\n  draw(fontSizes);\n}\n","import debounce from 'lodash.debounce';\nimport React, { useEffect, useRef } from 'react';\n\nimport { useResponsiveSvgSelection } from './hooks';\nimport { layout } from './layout';\nimport { getDefaultColors } from './utils';\n\nexport const defaultCallbacks = {\n  getWordTooltip: ({ text, value }) => `${text} (${value})`,\n};\n\nexport const defaultOptions = {\n  colors: getDefaultColors(),\n  deterministic: false,\n  enableOptimizations: false,\n  enableTooltip: true,\n  fontFamily: 'times new roman',\n  fontSizes: [4, 32],\n  fontStyle: 'normal',\n  fontWeight: 'normal',\n  padding: 1,\n  rotationAngles: [-90, 90],\n  scale: 'sqrt',\n  spiral: 'rectangular',\n  tooltipOptions: {},\n  transitionDuration: 600,\n};\n\nexport function ReactWordCloud({\n  callbacks,\n  maxWords = 100,\n  minSize,\n  options,\n  size: initialSize,\n  words,\n  ...rest\n}) {\n  const [ref, selection, size] = useResponsiveSvgSelection(\n    minSize,\n    initialSize,\n    options.svgAttributes,\n  );\n\n  const render = useRef(debounce(layout, 100));\n\n  useEffect(() => {\n    if (selection) {\n      const mergedCallbacks = { ...defaultCallbacks, ...callbacks };\n      const mergedOptions = { ...defaultOptions, ...options };\n\n      render.current({\n        callbacks: mergedCallbacks,\n        maxWords,\n        options: mergedOptions,\n        selection,\n        size,\n        words,\n      });\n    }\n  }, [maxWords, callbacks, options, selection, size, words]);\n\n  return <div ref={ref} style={{ height: '100%', width: '100%' }} {...rest} />;\n}\n\nReactWordCloud.defaultProps = {\n  callbacks: defaultCallbacks,\n  maxWords: 100,\n  minSize: [300, 300],\n  options: defaultOptions,\n};\n","import { select } from 'd3-selection';\nimport { useEffect, useRef, useState } from 'react';\nimport ResizeObserver from 'resize-observer-polyfill';\n\nexport function useResponsiveSvgSelection(minSize, initialSize, svgAttributes) {\n  const elementRef = useRef();\n  const [size, setSize] = useState(initialSize);\n  const [selection, setSelection] = useState(null);\n\n  useEffect(() => {\n    const element = elementRef.current;\n\n    // Set svg selection\n    let svg = select(element)\n      .append('svg')\n      .style('display', 'block'); // Native inline svg leaves undesired white space\n\n    if (typeof svgAttributes === 'object') {\n      Object.keys(svgAttributes).forEach(key => {\n        svg = svg.attr(key, svgAttributes[key]);\n      });\n    }\n\n    const selection = svg.append('g');\n    setSelection(selection);\n\n    function updateSize(width, height) {\n      svg.attr('height', height).attr('width', width);\n      selection.attr('transform', `translate(${width / 2}, ${height / 2})`);\n      setSize([width, height]);\n    }\n\n    let width = 0;\n    let height = 0;\n    if (initialSize === undefined) {\n      // Use parentNode size if resized has not occurred\n      width = element.parentElement.offsetWidth;\n      height = element.parentElement.offsetHeight;\n    } else {\n      // Use initialSize if it is provided\n      [width, height] = initialSize;\n    }\n\n    width = Math.max(width, minSize[0]);\n    height = Math.max(height, minSize[1]);\n    updateSize(width, height);\n\n    // Update resize using a resize observer\n    const resizeObserver = new ResizeObserver(entries => {\n      if (!entries || entries.length === 0) {\n        return;\n      }\n\n      if (initialSize === undefined) {\n        const { width, height } = entries[0].contentRect;\n        updateSize(width, height);\n      }\n    });\n    resizeObserver.observe(element);\n\n    // Cleanup\n    return () => {\n      resizeObserver.unobserve(element);\n      select(element)\n        .selectAll('*')\n        .remove();\n    };\n  }, [initialSize, minSize, svgAttributes]);\n\n  return [elementRef, selection, size];\n}\n"],"names":["cloudRadians","Math","PI","cw","ch","Cloud","size","text","cloudText","font","cloudFont","fontSize","cloudFontSize","fontStyle","cloudFontNormal","fontWeight","rotate","cloudRotate","padding","cloudPadding","spiral","archimedeanSpiral","words","timeInterval","Infinity","event","dispatch","random","cloud","canvas","cloudCanvas","killed","place","board","tag","bounds","dxdy","dx","dy","a","b","startX","x","startY","y","maxDelta","sqrt","s","dt","t","min","abs","x0","y0","x1","y1","cloudCollide","last","sprite","w","width","sw","lx","sx","msx","h","j","i","_","arguments","length","functor","start","contextAndRatio","height","ratio","getContext","willReadFrequently","getImageData","data","context","fillStyle","strokeStyle","textAlign","Uint32Array","tags","map","d","call","this","style","weight","sort","loop","from","to","cloudSprite","hasText","push","cloudBounds","multiStep","setTimeout","stop","revive","spirals","on","value","apply","di","c","clearRect","maxh","n","save","measureText","sr","sin","cr","cos","wcr","wsr","hcr","hsr","max","translate","fillText","lineWidth","strokeText","restore","xoff","yoff","pixels","w32","seen","seenRow","m","slice","b0","b1","e","document","createElement","archimedean","rectangular","sign","choose","array","floor","getFontSize","word","getText","getTransform","layout","_ref2","callbacks","maxWords","options","selection","deterministic","enableOptimizations","fontFamily","fontSizes","randomSeed","rotations","rotationAngles","scale","sortedWords","concat","descending","seedrandom","optimizedD3Cloud","d3Cloud","clonedeep","undefined","angles","increment","angle","draw","attempts","fontScale","scaleFunction","minSize","Number","maxSize","scaleLog","scaleSqrt","scaleLinear","domain","range","getFontScale","computedWords","console","warn","minFontSize","_ref","tooltipInstance","getWordColor","getWordTooltip","onWordClick","onWordMouseOver","onWordMouseOut","colors","enableTooltip","textAttributes","tooltipOptions","transitionDuration","getFill","selectAll","join","enter","append","isDestroyed","tippy","target","_extends","animation","arrow","content","onHidden","instance","destroy","state","isVisible","attr","Object","keys","forEach","key","transition","duration","update","exit","remove","render","_excluded","defaultCallbacks","defaultOptions","number","toString","scaleOrdinal","schemeCategory10","ReactWordCloud","_ref2$maxWords","initialSize","rest","_objectWithoutPropertiesLoose","_useResponsiveSvgSele","svgAttributes","elementRef","useRef","_useState","useState","setSize","_useState2","setSelection","useEffect","element","current","svg","select","updateSize","parentElement","offsetWidth","offsetHeight","resizeObserver","ResizeObserver","entries","_entries$0$contentRec","contentRect","observe","unobserve","useResponsiveSvgSelection","ref","debounce","mergedCallbacks","mergedOptions","React","defaultProps"],"mappings":"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"}